dfAP %>%
ggplot(aes(produto, valorDeVenda))+
geom_boxplot()
if(!require(readr))
install.packages("readr")
library(readr)
if(!require(dplyr))
install.packages("dplyr")
library(dplyr)
if(!require(ggplot2))
install.packages("ggplot2")
library(ggplot2)
if(!require(qqplotr))
install.packages("qqplotr")
library(qqplotr)
if(!require(rstatix))
install.packages("rstatix")
library(rstatix)
if(!require(janitor))
install.packages("janitor")
library(janitor)
if(!require(lubridate))
install.packages("lubridate")
library(lubridate)
if(!require("dgof"))
install.packages("dgof")
library(dgof)
dados <- read.csv('ca_2021_02_1.csv', sep = ";", dec = ",")
glimpse(dados)
dados <- dados %>% clean_names(case="lower_camel")
dados <- dados %>%
select(iRegiaoSigla, estadoSigla, municipio, revenda, produto, dataDaColeta, valorDeVenda, unidadeDeMedida, bandeira)
glimpse(dados)
dados <- dados %>%
mutate(dt_coleta = as.Date(dados$dataDaColeta, "%d/%m/%Y"))
glimpse(dados)
is.Date(dados$dt_coleta) #Verificando
table(dados$municipio)
table(dados$municipio, dados$produto)
table(dados$estadoSigla, dados$produto)
prop.table(table(dados$estadoSigla, dados$produto), margin = 2)*100
dados %>%
ggplot(aes(estadoSigla, fill = produto)) +
geom_bar()
dados %>%
ggplot(aes(estadoSigla)) +
geom_bar() +
facet_wrap(~produto)
#No Rj tem a gasolina aditivada mais cara do que em outros estados.
dados1 <- dados %>%
group_by(estadoSigla, produto) %>%
summarise(
mean_price = mean(valorDeVenda),
max_price = max(valorDeVenda),
min_price = min(valorDeVenda),
.groups = 'drop'
) %>%
#arrange(desc(mean_price))
arrange(mean_price)
#O preço médio do Etanol no estado de SP, tem um preço melhor para o consumidor.
dados %>%
filter(produto == "ETANOL") %>%
group_by(estadoSigla) %>%
summarise(
mean_price = mean(valorDeVenda),
max_price = max(valorDeVenda),
min_price = min(valorDeVenda),
.groups = 'drop'
)%>%
arrange(mean_price)
#No MT tem a menor média no valor do combustível GNV.
valor <- c(range(dados$valorDeVenda))
classes <- nclass.Sturges(dados$valorDeVenda)
table( cut(dados$valorDeVenda, seq(2, 9, l = 10)))
#Normalidade dos dados
dados %>%
ggplot(aes(valorDeVenda))+
geom_histogram(bins = 10) +
facet_wrap(~estadoSigla)
dados %>%
ggplot(aes(valorDeVenda))+
geom_histogram(aes(y = stat(count)/sum(count)), bins = 10) +
facet_wrap(~estadoSigla) +
scale_y_continuous(labels = scales::percent)
#Dados não normalizados
dados %>%
ggplot(aes(sample = valorDeVenda)) +
facet_wrap(~estadoSigla) +
stat_qq()
dados %>%
ggplot(aes(sample = valorDeVenda)) +
facet_wrap(~estadoSigla) +
stat_qq_band(fill = "gray") +
stat_qq_line(col = "red") +
stat_qq_point()
#shapiro.test(dados$valorDeVenda)
t1 <- ks.test(dados$valorDeVenda,"pnorm", mean(dados$valorDeVenda), sd(dados$valorDeVenda))
#Não deu certo
#dados %>%
#group_by(estadoSigla) %>%
#summarise( Estatistica =  t1$statistic,
# p_valor = t1$p.value)
dfAP <- filter(dados, estadoSigla == "AP")
glimpse(dfAP)
table(dfAP$produto)
table(dfAP$bandeira)
table(dfAP$bandeira, dfAP$produto)
valor2 <- c( range(dfAP$valorDeVenda))
classes2 <- nclass.Sturges(dfAP$valorDeVenda)
table( cut(dfAP$valorDeVenda, seq(4, 7, l = 9)))
prop.table(table(dfAP$produto))*100
prop.table(table(dfAP$estadoSigla, dfAP$produto))*100
dfAP %>%
ggplot(aes(bandeira)) +
geom_bar()+
facet_wrap(~produto)
dfAP %>%
ggplot(aes(produto, fill = bandeira)) +
geom_bar()
dfAP %>%
ggplot(aes(valorDeVenda))+
geom_histogram(bins = 10) +
facet_wrap(~produto)
dfAP %>%
ggplot(aes(valorDeVenda)) +
geom_histogram(aes(y = stat(count)/sum(count)), bins = 10)+
geom_density() +
facet_wrap(~produto)
dfAP %>%
ggplot(aes(sample = valorDeVenda)) +
facet_wrap(~produto) +
stat_qq()
dfAP %>%
ggplot(aes(sample = valorDeVenda)) +
facet_wrap(~produto) +
stat_qq_band(fill = "gray") +
stat_qq_line(col = "red") +
stat_qq_point()
shapiro.test(dfAP$valorDeVenda)
dfAP %>%
group_by(produto) %>%
summarise( Estatistica =  shapiro.test(valorDeVenda)$statistic,
p_valor = shapiro.test(valorDeVenda)$p.value)
dfAP %>%
group_by(produto) %>%
summarise(Mediana = median(valorDeVenda),
Quartil_1 = quantile(valorDeVenda, prob=0.25),
Quartil_3 = quantile(valorDeVenda, prob=0.75),
n = n())
#foi encontrado o produto diesel como valor outlier, foi verificado e o valor foi mantido.
dfAP %>%
group_by(produto) %>%
identify_outliers(valorDeVenda)
View(dfAP)
dfAP %>%
group_by(revenda)
dfAP %>%
filter(produto == "GASOLINA") %>%
group_by(municipio) %>%
summarise(
mean_price = mean(valorDeVenda),
max_price = max(valorDeVenda),
min_price = min(valorDeVenda),
.groups = 'drop'
)%>%
arrange(mean_price)
dfAP %>%
filter(produto == "GASOLINA") %>%
group_by(revenda) %>%
summarise(
mean_price = mean(valorDeVenda),
max_price = max(valorDeVenda),
min_price = min(valorDeVenda),
.groups = 'drop'
)%>%
arrange(mean_price)
